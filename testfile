[1mdiff --cc models/seeds.sql[m
[1mindex f943ccd,a18523a..0000000[m
[1m--- a/models/seeds.sql[m
[1m+++ b/models/seeds.sql[m
[36m@@@ -1,22 -1,22 +1,30 @@@[m
[32m++<<<<<<< HEAD[m
[32m +//users table[m
[32m++=======[m
[32m+ -- //Users table[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
  [m
  insert into expenses.users(UserId,Password,createdAt,updatedAt) values ('Manu',Now(),Now());[m
  insert into expenses.users(UserId,Password,createdAt,updatedAt) values ('Saryn',Now(),Now());[m
  insert into expenses.users(UserId,Password,createdAt,updatedAt) values ('Amanda',Now(),Now());[m
  insert into expenses.users(UserId,Password,createdAt,updatedAt) values ('David',Now(),Now());[m
  [m
[32m++<<<<<<< HEAD[m
[32m +//bill table[m
[32m++=======[m
[32m+ -- //Bill table[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
  [m
[31m- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('1','12','1000','2019-01-18',Now(),Now(),'100');[m
[31m- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('2','10','500','2019-01-18',Now(),Now(),'103');[m
[31m- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('3','15','300','2019-01-18',Now(),Now(),'102');[m
[31m- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('14','3','10','2019-01-18',Now(),Now(),'100');[m
[31m- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('9','10','90','2019-01-18',Now(),Now(),'101');[m
[32m+ -- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('1','12','1000','2019-01-18',Now(),Now(),'100');[m
[32m+ -- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('2','10','500','2019-01-18',Now(),Now(),'103');[m
[32m+ -- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('3','15','300','2019-01-18',Now(),Now(),'102');[m
[32m+ -- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('14','3','10','2019-01-18',Now(),Now(),'100');[m
[32m+ -- insert into expenses.bills(Bill_Id,Total_BillItems,BillExpense,BillDate,CreatedAt,UpdatedAt,UserUserId) values ('9','10','90','2019-01-18',Now(),Now(),'101');[m
  [m
[31m- //items table[m
[32m+ -- //items table[m
  [m
[31m- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Walmart','2019-01-18','1000','Need','Groceries',Now(),Now(),'1');[m
[31m- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('BestBuy','2019-01-18','500','Want','Electronics',Now(),Now(),'2');[m
[31m- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Walmart','2019-01-18','300','Want','Accessories',Now(),Now(),'3');[m
[31m- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Costco','2019-01-18','10','Want','Gardening',Now(),Now(),'14');[m
[31m- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Walmart','2019-01-18','90','Need','Groceries',Now(),Now(),'9');[m
[32m+ -- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Walmart','2019-01-18','1000','Need','Groceries',Now(),Now(),'1');[m
[32m+ -- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('BestBuy','2019-01-18','500','Want','Electronics',Now(),Now(),'2');[m
[32m+ -- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Walmart','2019-01-18','300','Want','Accessories',Now(),Now(),'3');[m
[32m+ -- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Costco','2019-01-18','10','Want','Gardening',Now(),Now(),'14');[m
[32m+ -- insert into expenses.items(Store,DOP,Price,Type,Category,createdAt,updatedAt,BillBillId) values ('Walmart','2019-01-18','90','Need','Groceries',Now(),Now(),'9');[m
[1mdiff --cc public/js/index.js[m
[1mindex 526e381,bc915c6..0000000[m
[1m--- a/public/js/index.js[m
[1m+++ b/public/js/index.js[m
[36m@@@ -1,8 -1,7 +1,14 @@@[m
  // Get references to page elements[m
[32m++<<<<<<< HEAD[m
[32m +// var $exampleText = $("#example-text");[m
[32m +// var $exampleDescription = $("#example-description");[m
[32m +// var $submitBtn = $("#submit");[m
[32m +var $exampleList = $("#example-list");[m
[32m++=======[m
[32m+ var $newUser = $("#new-user");[m
[32m+ var $submitBtn = $("#submit");[m
[32m+ var $existingUsers = $("#existing-user");[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
  [m
  // The API object contains methods for each kind of request we'll make[m
  var API = {[m
[36m@@@ -12,11 -11,11 +18,11 @@@[m
          "Content-Type": "application/json"[m
        },[m
        type: "POST",[m
[31m-       url: "api/examples",[m
[31m-       data: JSON.stringify(example)[m
[32m+       url: "api/users",[m
[32m+       data: JSON.stringify(users)[m
      });[m
    },[m
[31m -  getExamples: function() {[m
[32m +  getExamples: function () {[m
      return $.ajax({[m
        url: "api/users",[m
        type: "GET"[m
[36m@@@ -31,76 -30,67 +37,113 @@@[m
  };[m
  [m
  // refreshExamples gets new examples from the db and repopulates the list[m
[32m++<<<<<<< HEAD[m
[32m +var refreshExamples = function () {[m
[32m +  API.getExamples().then(function (data) {[m
[32m +    var $examples = data.map(function (User) {[m
[32m +      var $a = $("<a>")[m
[32m +        .text(User.Password)[m
[32m +        .attr("href", "/api/users/" + User.UserId);[m
[32m +[m
[32m +      var $li = $("<li>")[m
[32m +        .attr({[m
[32m +          class: "list-group-item",[m
[32m +          "data-id": User.UserId[m
[32m +        })[m
[32m +        .append($a);[m
[31m- [m
[31m-       var $button = $("<button>")[m
[31m-         .addClass("btn btn-danger float-right delete")[m
[31m-         .text("ï½˜");[m
[31m- [m
[31m-       $li.append($button);[m
[31m- [m
[31m-       return $li;[m
[31m-     });[m
[31m- [m
[31m-     $exampleList.empty();[m
[31m-     $exampleList.append($examples);[m
[31m-   });[m
[31m- };[m
[32m++=======[m
[32m+ // var refreshExamples = function() {[m
[32m+ //   API.getExamples().then(function(data) {[m
[32m+ //     var $examples = data.map(function(example) {[m
[32m+ //       var $a = $("<a>")[m
[32m+ //         .text(example.text)[m
[32m+ //         .attr("href", "/example/" + example.id);[m
[32m+ [m
[32m+ //       var $li = $("<li>")[m
[32m+ //         .attr({[m
[32m+ //           class: "list-group-item",[m
[32m+ //           "data-id": example.id[m
[32m+ //         })[m
[32m+ //         .append($a);[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
[32m+ [m
[32m+ //       var $button = $("<button>")[m
[32m+ //         .addClass("btn btn-danger float-right delete")[m
[32m+ //         .text("ï½˜");[m
[32m+ [m
[32m+ //       $li.append($button);[m
[32m+ [m
[32m+ //       return $li;[m
[32m+ //     });[m
[32m+ [m
[32m+ //     $exampleList.empty();[m
[32m+ //     $exampleList.append($examples);[m
[32m+ //   });[m
[32m+ // };[m
  [m
[32m +refreshExamples();[m
[32m +[m
  // handleFormSubmit is called whenever we submit a new example[m
  // Save the new example to the db and refresh the list[m
[31m -var handleFormSubmit = function(event) {[m
[31m -  event.preventDefault();[m
  [m
[32m++<<<<<<< HEAD[m
[32m +// var handleFormSubmit = function(event) {[m
[32m +//   event.preventDefault();[m
[32m +[m
[32m +//   var example = {[m
[32m +//     text: $exampleText.val().trim(),[m
[32m +//     description: $exampleDescription.val().trim()[m
[32m +//   };[m
[32m++=======[m
[32m+   var example = {[m
[32m+     text: $newUser.val().trim()[m
[32m+   };[m
[32m+ [m
[32m+   // if (!(example.text && example.description)) {[m
[32m+   //   alert("You must enter an example text and description!");[m
[32m+   //   return;[m
[32m+   // }[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
  [m
[31m -  API.saveExample(example).then(function() {[m
[31m -    refreshExamples();[m
[31m -  });[m
[32m +//   if (!(example.text && example.description)) {[m
[32m +//     alert("You must enter an example text and description!");[m
[32m +//     return;[m
[32m +//   }[m
  [m
[32m++<<<<<<< HEAD[m
[32m +//   API.saveExample(example).then(function() {[m
[32m +//     refreshExamples();[m
[32m +//   });[m
[32m +[m
[32m +//   $exampleText.val("");[m
[32m +//   $exampleDescription.val("");[m
[32m +// };[m
[32m++=======[m
[32m+   $newUser.val("");[m
[32m+ };[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
  [m
  // handleDeleteBtnClick is called when an example's delete button is clicked[m
  // Remove the example from the db and refresh the list[m
[31m -var handleDeleteBtnClick = function() {[m
[31m -  var idToDelete = $(this)[m
[31m -    .parent()[m
[31m -    .attr("data-id");[m
[31m -[m
[31m -  API.deleteExample(idToDelete).then(function() {[m
[31m -    refreshExamples();[m
[31m -  });[m
[31m -};[m
[32m +[m
[32m +// var handleDeleteBtnClick = function() {[m
[32m +//   var idToDelete = $(this)[m
[32m +//     .parent()[m
[32m +//     .attr("data-id");[m
[32m +[m
[32m +//   API.deleteExample(idToDelete).then(function() {[m
[32m +//     refreshExamples();[m
[32m +//   });[m
[32m +// };[m
  [m
  // Add event listeners to the submit and delete buttons[m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +// $submitBtn.on("click", handleFormSubmit);[m
[32m +// $exampleList.on("click", ".delete", handleDeleteBtnClick);[m
[32m +[m
[32m +[m
[32m++=======[m
[32m+ $submitBtn.on("click", handleFormSubmit);[m
[32m+ $existingUsers.on("click", ".delete", handleDeleteBtnClick);[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
[1mdiff --cc routes/apiRoutes.js[m
[1mindex 0eb94d0,2e5912c..0000000[m
[1m--- a/routes/apiRoutes.js[m
[1m+++ b/routes/apiRoutes.js[m
[36m@@@ -1,9 -1,9 +1,16 @@@[m
  var db = require("../models");[m
  [m
[32m++<<<<<<< HEAD[m
[32m +module.exports = function(app) {[m
[32m +  // Get all users for login check[m
[32m +  app.get("/api/users", function(req, res) {[m
[32m +    db.User.findAll({}).then(function(getUsers) {[m
[32m++=======[m
[32m+ module.exports = function (app) {[m
[32m+   // Get all users for login check[m
[32m+   app.get("/api/users", function (req, res) {[m
[32m+     db.user.findAll({}).then(function (getUsers) {[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
        res.json(getUsers);[m
      });[m
    });[m
[36m@@@ -25,20 -25,19 +32,35 @@@[m
      });[m
    });[m
  [m
[32m++<<<<<<< HEAD[m
[32m +  // Create a new user[m
[32m +  app.post("/api/users", function(req, res) {[m
[32m +    db.User.create({[m
[32m +      Password: req.body.Password[m
[32m++=======[m
[32m+   // Create a new bill (for a specific user)[m
[32m+   app.post("/api/users", function(req, res) {[m
[32m+     db.User.create({[m
[32m+       password: req.body[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
      }).then(function(newUser) {[m
        res.json(newUser);[m
      });[m
    });[m
  [m
    // Delete a bill (only for logged in user)[m
[32m++<<<<<<< HEAD[m
[32m +[m
[32m +  app.delete("/api/bills/:id", function(req, res) {[m
[32m +    db.bill.destroy({ where: { id: req.params.id } }).then(function(dbExample) {[m
[32m +      res.json(refreshPage);[m
[32m +    });[m
[32m +  });[m
[32m++=======[m
[32m+   // app.delete("/api/bills/:id", function(req, res) {[m
[32m+   //   db.bill.destroy({ where: { id: req.params.id } }).then(function(dbExample) {[m
[32m+   //     res.json(refreshPage);[m
[32m+   //   });[m
[32m+   // });[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
  };[m
[1mdiff --cc views/index.handlebars[m
[1mindex a026a0e,02cb8c2..0000000[m
[1m--- a/views/index.handlebars[m
[1m+++ b/views/index.handlebars[m
[36m@@@ -15,11 -10,11 +10,19 @@@[m
            </div>[m
            <button id="submit" class="btn btn-primary float-right">Submit</button>[m
          </form>[m
[32m++<<<<<<< HEAD[m
[32m +        <h3>Examples:</h3>[m
[32m +        <ul id="example-list" class="list-group">[m
[32m +          {{#each User}}[m
[32m +          <li data-id="{{this.Password}}" class="list-group-item">[m
[32m +            <a href="example/{{this.UserId}}">{{this.Password}}</a>[m
[32m++=======[m
[32m+         <h3>Existing Users</h3>[m
[32m+         <ul id="existing-users" class="list-group">[m
[32m+           {{#each expenses.users}}[m
[32m+           <li data-id="{{this.UserId}}" class="list-group-item">[m
[32m+             <a href="users/{{this.UserId}}">{{this.password}}</a>[m
[32m++>>>>>>> 25880987e754231659e88567585b015b523d66f2[m
              <button class="btn btn-danger float-right delete">ï½˜</button>[m
            </li>[m
            {{/each}}[m
